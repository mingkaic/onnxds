
load("@com_google_protobuf//:protobuf.bzl", "py_proto_library")

package(
    default_visibility = ["//visibility:public"],
)

proto_library(
    name = "dataset_pb",
    srcs = ["datasets.proto"],
    deps = ["//onnx:onnx_pb"],
)

# py_proto_library(
#     name = "dataset_py_pb",
#     srcs = ["datasets.proto"],
#     deps = [":onnx_py_pb"],
#     visibility = ["//visibility:public"],
# )

py_library(
    name = "dataset_py_pb",
    srcs = ["datasets_pb2.py"],
    deps = ["//onnx:onnx_py_pb"],
)

py_binary(
    name = "tfgen_dataset",
    srcs = ["tfgen_dataset.py"],
    deps = [":dataset_py_pb"],
)

py_library(
    name = "read_dataset",
    srcs = ["read_dataset.py"],
    deps = [":dataset_py_pb"],
)

genrule(
    name = "generate_test_mnist",
    srcs = [],
    outs = ["mnist.onnx"],
    tools = [":tfgen_dataset"],
    cmd = "$(location :tfgen_dataset) --out $@ --split TRAIN mnist",
)

genrule(
    name = "generate_test_mnist_5batch",
    srcs = [],
    outs = ["mnist_5batch.onnx"],
    tools = [":tfgen_dataset"],
    cmd = "$(location :tfgen_dataset) --out $@ --split TRAIN mnist --batch 5",
)

py_test(
    name = "readtest",
    srcs = ["readtest.py"],
    deps = [":read_dataset"],
    data = [
        ":generate_test_mnist",
        ":generate_test_mnist_5batch",
    ],
)
